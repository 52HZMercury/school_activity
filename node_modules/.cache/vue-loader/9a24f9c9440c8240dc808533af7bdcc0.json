{"remainingRequest":"C:\\Users\\MSI-pc\\Desktop\\ybinfo\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\MSI-pc\\Desktop\\ybinfo\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!C:\\Users\\MSI-pc\\Desktop\\ybinfo\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\MSI-pc\\Desktop\\ybinfo\\src\\components\\Home\\HomeCard.vue?vue&type=template&id=c96f9742&scoped=true&","dependencies":[{"path":"C:\\Users\\MSI-pc\\Desktop\\ybinfo\\src\\components\\Home\\HomeCard.vue","mtime":1638357264502},{"path":"C:\\Users\\MSI-pc\\Desktop\\ybinfo\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\MSI-pc\\Desktop\\ybinfo\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\MSI-pc\\Desktop\\ybinfo\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\MSI-pc\\Desktop\\ybinfo\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}